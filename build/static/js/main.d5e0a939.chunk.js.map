{"version":3,"sources":["App.js","index.js"],"names":["App","useState","notes","setnotes","NewNote","setNewNote","update","setupdate","displayNote","setdisplayNote","showAll","setShowAll","notesToShow","filter","note","important","addnoteToDb","axios","post","content","then","res","console","log","useEffect","get","concat","data","className","onClick","map","n","id","type","onChange","e","target","value","ReactDOM","render","document","getElementById"],"mappings":"iNAoEeA,MA9Df,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAMG,EAAN,KAAcC,EAAd,KACA,EAA0BJ,oBAAS,GAAnC,mBAAMK,EAAN,KAAaC,EAAb,KACA,EAAoCN,mBAAS,IAA7C,mBAAMO,EAAN,KAAkBC,EAAlB,KACA,EAA6BR,oBAAS,GAAtC,mBAAMS,EAAN,KAAeC,EAAf,KAGMC,EAAcF,EAASR,EAAOA,EAAMW,QAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKC,aAcxDC,EAAc,WAClBC,IAAMC,KAAK,aAAa,CAACC,QAAQf,IAChCgB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,OAmBhB,OAFEG,qBATe,WACfP,IAAMQ,IAAI,cACTL,MAAK,SAAAC,GAEJlB,EAASD,EAAMwB,OAAOL,EAAIM,OAC1BlB,EAAeD,EAAYkB,OAAOL,EAAIM,YAIrB,CAACrB,IAGpB,sBAAKsB,UAAU,MAAf,UACA,uCACA,yBAAQC,QAAS,kBAAMlB,GAAYD,IAAUkB,UAAU,SAAvD,kBACUlB,EAAU,YAAc,SAElC,6BACCE,EAAYkB,KAAI,SAAAC,GAAC,OAAI,mCAAiBA,EAAEZ,QACzC,wBAAQS,UAAU,YAAYC,QAAS,kBAxBfG,EAwBsCD,EAAEC,QAvBhEV,QAAQC,IAAIS,GADW,IAACA,GAwBxB,SAAsED,EAAEhB,UAAW,qBAAqB,mBADlF,MAASgB,EAAEC,SAGjC,sBAAKJ,UAAU,cAAf,UACA,uBAAOK,KAAK,OAAOC,SA5CA,SAACC,GACpB9B,EAAW8B,EAAEC,OAAOC,UA4CpB,wBAAQT,UAAU,OAAOC,QAzCN,WACnBtB,GAAWD,GACXH,EAAS,IACTa,KAsCA,yBCzDJsB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d5e0a939.chunk.js","sourcesContent":["import './App.css';\nimport axios from 'axios'\nimport {useState,useEffect} from 'react'\n\n\n\nfunction App() {\n  const [notes, setnotes] = useState([])\n  const[NewNote,setNewNote] = useState('')\n  const[update,setupdate] = useState(true)\n  const[displayNote,setdisplayNote] = useState([])\n  const[showAll, setShowAll] = useState(true)\n\n\n  const notesToShow = showAll? notes: notes.filter(note => note.important === true)\n\n\n  const handleChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const handleSubmit = () => {\n    setupdate(!update)\n    setnotes([])\n    addnoteToDb()\n\n  }\n\n  const addnoteToDb = () => {\n    axios.post('/api/notes',{content:NewNote})\n    .then(res => {\n      console.log(res)})\n  }\n\n  const toggleImportance = (id) => {\n    console.log(id)\n  }\n\n\n  const getNotes = () => {\n    axios.get('/api/notes')\n    .then(res => {\n      // console.log(res.data)\n      setnotes(notes.concat(res.data))\n      setdisplayNote(displayNote.concat(res.data))\n    })\n  }\n// eslint-disable-next-line\n    useEffect(getNotes,[update])\n\n  return (\n    <div className=\"App\">\n    <h1>Notes</h1>\n    <button onClick={() => setShowAll(!showAll)} className=\"filter\">          \n        Show {showAll ? 'important' : 'all' }\n    </button>\n    <ul>\n    {notesToShow.map(n => <li key={n.id}> {n.content} \n    <button className='important' onClick={() => toggleImportance(n.id)}>{n.important? \"make not important\":\"make important\"}</button> </li>)}\n    </ul>\n    <div className=\"input-notes\">\n    <input type=\"text\" onChange={handleChange}/>\n    <button className=\"save\" onClick={handleSubmit}>save</button>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}